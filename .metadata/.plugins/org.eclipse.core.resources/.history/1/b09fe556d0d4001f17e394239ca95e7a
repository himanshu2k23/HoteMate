package com.hotelmate.servlets;

import com.razorpay.*;
import org.json.JSONObject; 
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.io.PrintWriter;

@WebServlet("/process-payment-servlet")
public class ProcessPaymentServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private static final String KEY_ID = "rzp_test_PMlngtSwomnp5L";
	private static final String KEY_SECRET = "BQVD0jeBm8yjlFMbwV8X5r2d";

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		response.setContentType("application/json");
		PrintWriter out = response.getWriter();

		try {
			String totalAmountStr = request.getParameter("totalAmount");
			if (totalAmountStr == null || totalAmountStr.trim().isEmpty()) {
				throw new ServletException("Total amount is required");
			}
			double totalAmount = Double.parseDouble(totalAmountStr.trim());
			int amountInPaise = (int) (totalAmount * 100);
			RazorpayClient razorpay = new RazorpayClient(KEY_ID, KEY_SECRET);
			JSONObject orderRequest = new JSONObject();
			orderRequest.put("amount", Integer.valueOf(amountInPaise));
			orderRequest.put("currency", "INR");
			orderRequest.put("receipt", "order_" + System.currentTimeMillis());
			Order order = razorpay.orders.create(orderRequest);
			String orderId = order.get("id").toString();
			JSONObject responseData = new JSONObject();
			responseData.put("orderId", orderId);
			responseData.put("amount", amountInPaise);
			responseData.put("currency", "INR");
			responseData.put("keyId", KEY_ID);

			out.print(responseData.toString());
			out.flush();

		} catch (RazorpayException e) {
			response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
			JSONObject errorResponse = new JSONObject();
			errorResponse.put("error", "RazorPay Error: " + e.getMessage());
			out.print(errorResponse.toString());
		} catch (Exception e) {
			e.printStackTrace();
			response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
			JSONObject errorResponse = new JSONObject();
			errorResponse.put("error", "Server Error: " + e.getMessage());
			out.print(errorResponse.toString());
		}
	}
}