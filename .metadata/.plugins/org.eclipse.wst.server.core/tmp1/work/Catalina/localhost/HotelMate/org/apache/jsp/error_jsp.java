/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.28
 * Generated at: 2025-01-13 20:31:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class error_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>Error - HotelMate</title>\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("	background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\r\n");
      out.write("	min-height: 100vh;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	padding: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".error-container {\r\n");
      out.write("	background: rgba(255, 255, 255, 0.95);\r\n");
      out.write("	padding: 3rem;\r\n");
      out.write("	border-radius: 20px;\r\n");
      out.write("	box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1), 0 1px 8px\r\n");
      out.write("		rgba(0, 0, 0, 0.05);\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	max-width: 600px;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	position: relative;\r\n");
      out.write("	overflow: hidden;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".error-container::before {\r\n");
      out.write("	content: '';\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	top: 0;\r\n");
      out.write("	left: 0;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	height: 5px;\r\n");
      out.write("	background: linear-gradient(90deg, #dc3545, #fd7e14, #dc3545);\r\n");
      out.write("	animation: gradient 3s ease infinite;\r\n");
      out.write("	background-size: 200% auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@\r\n");
      out.write("keyframes gradient { 0% {\r\n");
      out.write("	background-position: 0% 50%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("50\r\n");
      out.write("%\r\n");
      out.write("{\r\n");
      out.write("background-position\r\n");
      out.write(":\r\n");
      out.write("100%\r\n");
      out.write("50%;\r\n");
      out.write("}\r\n");
      out.write("100\r\n");
      out.write("%\r\n");
      out.write("{\r\n");
      out.write("background-position\r\n");
      out.write(":\r\n");
      out.write("0%\r\n");
      out.write("50%;\r\n");
      out.write("}\r\n");
      out.write("}\r\n");
      out.write(".error-icon {\r\n");
      out.write("	font-size: 80px;\r\n");
      out.write("	color: #dc3545;\r\n");
      out.write("	margin-bottom: 1.5rem;\r\n");
      out.write("	animation: bounce 2s ease infinite;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@\r\n");
      out.write("keyframes bounce { 0%, 100% {\r\n");
      out.write("	transform: translateY(0);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("50\r\n");
      out.write("%\r\n");
      out.write("{\r\n");
      out.write("transform\r\n");
      out.write(":\r\n");
      out.write("translateY(\r\n");
      out.write("-10px\r\n");
      out.write(");\r\n");
      out.write("}\r\n");
      out.write("}\r\n");
      out.write(".error-title {\r\n");
      out.write("	font-size: 2.5rem;\r\n");
      out.write("	font-weight: 700;\r\n");
      out.write("	color: #343a40;\r\n");
      out.write("	margin-bottom: 1rem;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".error-message {\r\n");
      out.write("	font-size: 1.1rem;\r\n");
      out.write("	color: #6c757d;\r\n");
      out.write("	margin-bottom: 2rem;\r\n");
      out.write("	line-height: 1.6;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".error-suggestions {\r\n");
      out.write("	background-color: #f8f9fa;\r\n");
      out.write("	padding: 1.5rem;\r\n");
      out.write("	border-radius: 12px;\r\n");
      out.write("	margin-bottom: 2rem;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".suggestion-list {\r\n");
      out.write("	text-align: left;\r\n");
      out.write("	margin-bottom: 0;\r\n");
      out.write("	padding-left: 1.5rem;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".suggestion-list li {\r\n");
      out.write("	margin-bottom: 0.5rem;\r\n");
      out.write("	color: #495057;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn-back {\r\n");
      out.write("	padding: 0.8rem 2rem;\r\n");
      out.write("	font-size: 1.1rem;\r\n");
      out.write("	font-weight: 500;\r\n");
      out.write("	transition: all 0.3s ease;\r\n");
      out.write("	background-color: #0d6efd;\r\n");
      out.write("	border: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn-back:hover {\r\n");
      out.write("	transform: translateY(-2px);\r\n");
      out.write("	box-shadow: 0 5px 15px rgba(13, 110, 253, 0.2);\r\n");
      out.write("	background-color: #0b5ed7;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".additional-links {\r\n");
      out.write("	margin-top: 1.5rem;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	gap: 1rem;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".additional-links a {\r\n");
      out.write("	color: #6c757d;\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	font-size: 0.9rem;\r\n");
      out.write("	transition: color 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".additional-links a:hover {\r\n");
      out.write("	color: #343a40;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"error-container\">\r\n");
      out.write("		<i class=\"bi bi-exclamation-triangle error-icon\"></i>\r\n");
      out.write("		<h1 class=\"error-title\">Oops!</h1>\r\n");
      out.write("		<p class=\"error-message\">We encountered an unexpected error while\r\n");
      out.write("			processing your request.</p>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"error-suggestions\">\r\n");
      out.write("			<ul class=\"suggestion-list\">\r\n");
      out.write("				<li>Refresh the page and try again</li>\r\n");
      out.write("				<li>Clear your browser cache and cookies</li>\r\n");
      out.write("				<li>Check your internet connection</li>\r\n");
      out.write("				<li>Try accessing the page later</li>\r\n");
      out.write("			</ul>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<a href=\"index.jsp\" class=\"btn btn-primary btn-back\"> <i\r\n");
      out.write("			class=\"bi bi-house-door me-2\"></i>Return to Homepage\r\n");
      out.write("		</a>\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<script\r\n");
      out.write("		src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.7/dist/umd/popper.min.js\"></script>\r\n");
      out.write("	<script\r\n");
      out.write("		src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
