/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.28
 * Generated at: 2025-01-18 21:14:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.admin;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.List;
import java.util.Map;
import java.text.SimpleDateFormat;
import java.sql.Timestamp;

public final class users_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(6);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("java.sql.Timestamp");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>Manage Users</title>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n");
      out.write("		<div class=\"container-fluid\">\r\n");
      out.write("			<img src=\"http://localhost:8080/HotelMate/Images/HotelmateLogo.png\"\r\n");
      out.write("				alt=\"HotelMate Logo\" width=\"60\" height=\"45\" class=\"d-inline-block\">\r\n");
      out.write("			<a class=\"navbar-brand\" href=\"#\">HotelMate Admin</a>\r\n");
      out.write("			<button class=\"navbar-toggler\" type=\"button\"\r\n");
      out.write("				data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\"\r\n");
      out.write("				aria-controls=\"navbarNav\" aria-expanded=\"false\"\r\n");
      out.write("				aria-label=\"Toggle navigation\">\r\n");
      out.write("				<span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("			</button>\r\n");
      out.write("			<div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n");
      out.write("				<ul class=\"navbar-nav ms-auto\">\r\n");
      out.write("					<li class=\"nav-item\"><a class=\"nav-link\"\r\n");
      out.write("						href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/admin/logout\">Logout</a>\r\n");
      out.write("					</li>\r\n");
      out.write("				</ul>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</nav>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"container mt-5\">\r\n");
      out.write("		<h1 class=\"text-center mb-4\">User Management</h1>\r\n");
      out.write("		");

		String successMsg = request.getParameter("successMsg");
		String errorMsg = request.getParameter("errorMsg");
		if (successMsg != null) {
		
      out.write("\r\n");
      out.write("		<div class=\"alert alert-success alert-dismissible fade show\"\r\n");
      out.write("			role=\"alert\">\r\n");
      out.write("			");
      out.print(successMsg);
      out.write("\r\n");
      out.write("			<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"\r\n");
      out.write("				aria-label=\"Close\"></button>\r\n");
      out.write("		</div>\r\n");
      out.write("		");

		} else if (errorMsg != null) {
		
      out.write("\r\n");
      out.write("		<div class=\"alert alert-danger alert-dismissible fade show\"\r\n");
      out.write("			role=\"alert\">\r\n");
      out.write("			");
      out.print(errorMsg);
      out.write("\r\n");
      out.write("			<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"\r\n");
      out.write("				aria-label=\"Close\"></button>\r\n");
      out.write("		</div>\r\n");
      out.write("		");

		}
		
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<div class=\"table-responsive\">\r\n");
      out.write("		\r\n");
      out.write("			<table class=\"table table-bordered table-hover\">\r\n");
      out.write("				<thead class=\"table-dark\">\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th>ID</th>\r\n");
      out.write("						<th>Full Name</th>\r\n");
      out.write("						<th>Email</th>\r\n");
      out.write("						<th>Created At</th>\r\n");
      out.write("						<th>Actions</th>\r\n");
      out.write("					</tr>\r\n");
      out.write("				</thead>\r\n");
      out.write("				<tbody>\r\n");
      out.write("					");

					List<Map<String, Object>> users = (List<Map<String, Object>>) request.getAttribute("users");
					if (users != null && !users.isEmpty()) {
						for (Map<String, Object> user : users) {
					
      out.write("\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>");
      out.print(user.get("id"));
      out.write("</td>\r\n");
      out.write("						<td>");
      out.print(user.get("full_name"));
      out.write("</td>\r\n");
      out.write("						<td>");
      out.print(user.get("email"));
      out.write("</td>\r\n");
      out.write("						");

						Timestamp createdAt = (Timestamp) user.get("created_at");
						SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss, dd MMM , yyyy ");
						String formattedDate = sdf.format(createdAt);
						
      out.write("\r\n");
      out.write("						<td>");
      out.print(formattedDate);
      out.write("</td>\r\n");
      out.write("\r\n");
      out.write("						<td>\r\n");
      out.write("							<form action=\"");
      out.print(request.getContextPath());
      out.write("/admin/users\"\r\n");
      out.write("								method=\"post\" style=\"display: inline;\">\r\n");
      out.write("								<input type=\"hidden\" name=\"action\" value=\"delete\"> <input\r\n");
      out.write("									type=\"hidden\" name=\"id\" value=\"");
      out.print(user.get("id"));
      out.write("\">\r\n");
      out.write("								<button type=\"submit\" class=\"btn btn-danger btn-sm\">Delete</button>\r\n");
      out.write("							</form> \r\n");
      out.write("							<button type=\"button\" class=\"btn btn-warning btn-sm\"\r\n");
      out.write("								data-bs-toggle=\"modal\" data-bs-target=\"#editUserModal\"\r\n");
      out.write("								data-id=\"");
      out.print(user.get("id"));
      out.write("\"\r\n");
      out.write("								data-full_name=\"");
      out.print(user.get("full_name"));
      out.write("\"\r\n");
      out.write("								data-email=\"");
      out.print(user.get("email"));
      out.write("\">Modify</button>\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					");

					}
					} else {
					
      out.write("\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td colspan=\"5\" class=\"text-center\">No users found.</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					");

					}
					
      out.write("\r\n");
      out.write("				</tbody>\r\n");
      out.write("			</table>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<a href=\"");
      out.print(request.getContextPath());
      out.write("/admin/dashboard\"\r\n");
      out.write("			class=\"btn btn-primary mt-3\">Back to Dashboard</a>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"modal fade\" id=\"editUserModal\" tabindex=\"-1\"\r\n");
      out.write("		aria-labelledby=\"editUserModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("		<div class=\"modal-dialog\">\r\n");
      out.write("			<div class=\"modal-content\">\r\n");
      out.write("				<div class=\"modal-header\">\r\n");
      out.write("					<h5 class=\"modal-title\" id=\"editUserModalLabel\">Edit User</h5>\r\n");
      out.write("					<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"\r\n");
      out.write("						aria-label=\"Close\"></button>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"modal-body\">\r\n");
      out.write("					<form action=\"");
      out.print(request.getContextPath());
      out.write("/admin/users\"\r\n");
      out.write("						method=\"post\">\r\n");
      out.write("						<input type=\"hidden\" name=\"action\" value=\"update\"> <input\r\n");
      out.write("							type=\"hidden\" name=\"id\" id=\"userId\">\r\n");
      out.write("\r\n");
      out.write("						<div class=\"mb-3\">\r\n");
      out.write("							<label for=\"fullName\" class=\"form-label\">Full Name</label> <input\r\n");
      out.write("								type=\"text\" class=\"form-control\" id=\"fullName\" name=\"full_name\"\r\n");
      out.write("								required>\r\n");
      out.write("						</div>\r\n");
      out.write("\r\n");
      out.write("						<div class=\"mb-3\">\r\n");
      out.write("							<label for=\"email\" class=\"form-label\">Email</label> <input\r\n");
      out.write("								type=\"email\" class=\"form-control\" id=\"email\" name=\"email\"\r\n");
      out.write("								required>\r\n");
      out.write("						</div>\r\n");
      out.write("\r\n");
      out.write("						<button type=\"submit\" class=\"btn btn-primary\">Save\r\n");
      out.write("							Changes</button>\r\n");
      out.write("					</form>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<footer class=\"bg-dark text-white text-center py-3 mt-5\">\r\n");
      out.write("		<p>© HotelMate 2025 - All rights reserved</p>\r\n");
      out.write("	</footer>\r\n");
      out.write("\r\n");
      out.write("	<script\r\n");
      out.write("		src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("	<script>\r\n");
      out.write("		var editUserModal = document.getElementById('editUserModal');\r\n");
      out.write("		editUserModal.addEventListener('show.bs.modal', function(event) {\r\n");
      out.write("			var button = event.relatedTarget;\r\n");
      out.write("			var userId = button.getAttribute('data-id');\r\n");
      out.write("			var fullName = button.getAttribute('data-full_name');\r\n");
      out.write("			var email = button.getAttribute('data-email');\r\n");
      out.write("			document.getElementById('userId').value = userId;\r\n");
      out.write("			document.getElementById('fullName').value = fullName;\r\n");
      out.write("			document.getElementById('email').value = email;\r\n");
      out.write("		});\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
