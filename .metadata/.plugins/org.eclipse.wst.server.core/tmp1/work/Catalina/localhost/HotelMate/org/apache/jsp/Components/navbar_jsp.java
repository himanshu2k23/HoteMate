/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.28
 * Generated at: 2025-01-13 19:47:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Components;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class navbar_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<nav class=\"navbar navbar-expand-lg\"\r\n");
      out.write("	style=\"background-color: #343a40; border-radius: 15px; padding: 10px 20px; box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.2); margin: 10px; position: fixed; top: 0px; width: calc(100% - 20px); z-index: 1000;\">\r\n");
      out.write("	<div class=\"container-fluid\">\r\n");
      out.write("		<!-- Logo and Brand Name -->\r\n");
      out.write("		<a class=\"navbar-brand text-light d-flex align-items-center\"\r\n");
      out.write("			href=\"index.jsp\"> <img\r\n");
      out.write("			src=\"http://localhost:8080/HotelMate/Images/HotelmateLogo.png\"\r\n");
      out.write("			alt=\"Logo\" width=\"80\" height=\"60\"\r\n");
      out.write("			class=\"d-inline-block align-text-top\"> <span\r\n");
      out.write("			class=\"nav-link text-light active\">HotelMate</span>\r\n");
      out.write("		</a>\r\n");
      out.write("\r\n");
      out.write("		<!-- Toggler button for smaller screens -->\r\n");
      out.write("		<button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\r\n");
      out.write("			data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\"\r\n");
      out.write("			aria-expanded=\"false\" aria-label=\"Toggle navigation\"\r\n");
      out.write("			style=\"border-color: #f8f9fa;\">\r\n");
      out.write("			<span class=\"navbar-toggler-icon\" style=\"color: #f8f9fa;\"></span>\r\n");
      out.write("		</button>\r\n");
      out.write("\r\n");
      out.write("		<!-- Navbar Links -->\r\n");
      out.write("		<div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n");
      out.write("\r\n");
      out.write("			<script>\r\n");
      out.write("				// Scroll functionality\r\n");
      out.write("				function scrollToFeatures(event) {\r\n");
      out.write("					event.preventDefault();\r\n");
      out.write("					localStorage.setItem('scrollToFeatures', 'true');\r\n");
      out.write("					window.location.href = \"index.jsp\";\r\n");
      out.write("				}\r\n");
      out.write("\r\n");
      out.write("				function scrollToContact(event) {\r\n");
      out.write("					event.preventDefault();\r\n");
      out.write("					localStorage.setItem('scrollToContact', 'true');\r\n");
      out.write("					window.location.href = \"index.jsp\";\r\n");
      out.write("				}\r\n");
      out.write("\r\n");
      out.write("				// Logic to dynamically toggle login/logout\r\n");
      out.write("				window.addEventListener('DOMContentLoaded', () => {\r\n");
      out.write("					const navRight = document.querySelector('.navbar-nav.ms-auto');\r\n");
      out.write("					navRight.innerHTML = ''; // Clear the default buttons\r\n");
      out.write("\r\n");
      out.write("					if (localStorage.getItem('HasLoggedIn') === 'true') {\r\n");
      out.write("						// Show dropdown if logged in\r\n");
      out.write("						navRight.innerHTML = `\r\n");
      out.write("							<li class=\"nav-item dropdown\">\r\n");
      out.write("							<a class=\"nav-link dropdown-toggle text-light\" href=\"#\" id=\"userDropdown\" role=\"button\"\r\n");
      out.write("							data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n");
      out.write("							<i class=\"bi bi-person-circle\" style=\"font-size: 2rem;\"></i>\r\n");
      out.write("						</a>\r\n");
      out.write("\r\n");
      out.write("								<ul class=\"dropdown-menu dropdown-menu-end\" aria-labelledby=\"userDropdown\">\r\n");
      out.write("									<li><a class=\"dropdown-item\" href=\"mybookings.jsp\">My Bookings</a></li>\r\n");
      out.write("									<li><hr class=\"dropdown-divider\"></li>\r\n");
      out.write("									<li><a class=\"dropdown-item\" href=\"#\" onclick=\"logout()\">Logout</a></li>\r\n");
      out.write("								</ul>\r\n");
      out.write("							</li>\r\n");
      out.write("						`;\r\n");
      out.write("					} else {\r\n");
      out.write("						// Show login and signup if not logged in\r\n");
      out.write("						navRight.innerHTML = `\r\n");
      out.write("							<li class=\"nav-item\"><a class=\"nav-link login-btn\" href=\"login.jsp\">Login</a></li>\r\n");
      out.write("							<li class=\"nav-item\"><a class=\"nav-link signup-btn\" href=\"signup.jsp\">Sign Up</a></li>\r\n");
      out.write("						`;\r\n");
      out.write("					}\r\n");
      out.write("				});\r\n");
      out.write("\r\n");
      out.write("				// Logout function\r\n");
      out.write("				function logout() {\r\n");
      out.write("					localStorage.removeItem('HasLoggedIn');\r\n");
      out.write("					window.location.href = 'index.jsp';\r\n");
      out.write("				}\r\n");
      out.write("			</script>\r\n");
      out.write("\r\n");
      out.write("			<ul class=\"navbar-nav me-auto\">\r\n");
      out.write("				<li class=\"nav-item\"><a\r\n");
      out.write("					class=\"nav-link text-light active hover-effect\" aria-current=\"page\"\r\n");
      out.write("					href=\"index.jsp\">Home</a></li>\r\n");
      out.write("				<li class=\"nav-item\"><a\r\n");
      out.write("					class=\"nav-link text-light hover-effect\" href=\"#\"\r\n");
      out.write("					onclick=\"scrollToFeatures(event)\">Features</a></li>\r\n");
      out.write("				<li class=\"nav-item\"><a\r\n");
      out.write("					class=\"nav-link text-light hover-effect\" href=\"HotelDataServlet\">Hotels</a></li>\r\n");
      out.write("				<li class=\"nav-item\"><a\r\n");
      out.write("					class=\"nav-link text-light hover-effect\" href=\"#\"\r\n");
      out.write("					onclick=\"scrollToContact(event)\">Contact Us</a></li>\r\n");
      out.write("			</ul>\r\n");
      out.write("\r\n");
      out.write("			<!-- Login/Sign Up or Account Dropdown -->\r\n");
      out.write("			<ul class=\"navbar-nav ms-auto gap-3\"></ul>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write(".hover-effect {\r\n");
      out.write("	transition: color 0.3s ease, background-color 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".hover-effect:hover {\r\n");
      out.write("	color: #97CC04 !important;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".login-btn, .signup-btn {\r\n");
      out.write("	background-color: #97CC04;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	padding: 8px 15px;\r\n");
      out.write("	transition: background-color 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".login-btn:hover, .signup-btn:hover {\r\n");
      out.write("	background-color: #76b302;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
